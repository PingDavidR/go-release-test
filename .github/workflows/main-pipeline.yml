name: Main Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0' # Run at midnight every Sunday

jobs:
  # Basic CI testing job
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.5'

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

  # Linting job (added before security scan)
  lint:
    name: Lint
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.59.1

      - name: Run golangci-lint
        run: golangci-lint run ./...

  # Security scanning job - combines GoSec, govulncheck, and partial CodeQL setup
  security-scan:
    name: Security Scan
    needs: [test, lint]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'

      - name: Get dependencies
        run: go mod download

      # GoSec security scanning
      - name: Run GoSec Security Scanner
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          # First run with text output to see issues in logs
          gosec -no-fail ./...
          # Then run with SARIF output for GitHub security dashboard integration
          # Continue-on-error flag ensures workflow doesn't fail if security issues are found
          gosec -fmt=sarif -out=gosec.sarif ./... || echo "::warning::Security issues found, but continuing pipeline"
        
      - name: Upload GoSec scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec.sarif

      # Vulnerability checking
      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./... || echo "::warning::Vulnerabilities found, but continuing pipeline"

  # CodeQL analysis job
  codeql-analysis:
    name: CodeQL Analysis
    needs: test
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Build job that runs after all tests and security checks have passed
  build:
    name: Build
    # Require all security jobs to pass before building
    needs: [test, lint, security-scan, codeql-analysis]
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.5'

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: make build

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: gorelease
        path: bin/gorelease