#!/bin/bash
# NOAGENT: This file should not be modified by automated processes

set -e

# This script helps with the pre-commit check to detect agent modifications to protected files

# Check if the .noagent file exists
if [ ! -f .noagent ]; then
  echo "Warning: .noagent file not found. Cannot check for protected files."
  exit 0
fi

# Check for HUMAN_EDIT environment variable that can be used to bypass checks
if [ "$HUMAN_EDIT" = "1" ] || [ "$HUMAN_EDIT" = "true" ]; then
  echo "HUMAN_EDIT flag is set. Bypassing agent protection checks."
  exit 0
fi

# Get staged files
STAGED_FILES=$(git diff --cached --name-only)

# Extract protected files/patterns (skip comments and empty lines)
PROTECTED_FILES=$(grep -v '^#' .noagent | grep -v '^$')

# Look for commit message evidence of automation
COMMIT_MSG=$(cat .git/COMMIT_EDITMSG 2>/dev/null || echo "")
LOOKS_AUTOMATED=0

# Check for automation indicators in commit message
if echo "$COMMIT_MSG" | grep -iE "automated by|copilot change|agent modification|\[bot\]|auto-generated|ai-assisted|generated by|created by ai|suggested by|co-authored by" >/dev/null; then
  LOOKS_AUTOMATED=1
  echo "Warning: Commit message suggests automated changes."

  # If commit message contains [HUMAN EDIT], it's explicitly marked as a manual change
  if echo "$COMMIT_MSG" | grep -i "\[HUMAN EDIT\]" >/dev/null; then
    echo "Found [HUMAN EDIT] tag in commit message. Allowing changes to protected files."
    LOOKS_AUTOMATED=0
  fi
fi

# Only check for protected file changes if commit looks automated
if [ "$LOOKS_AUTOMATED" -eq 1 ]; then
  for file in $STAGED_FILES; do
    for pattern in $PROTECTED_FILES; do
      if [[ "$file" == "$pattern" ]] || [[ "$file" == $(eval echo "$pattern") ]]; then
        echo "Error: Protected file '$file' modified in what appears to be an automated commit."
        echo "If this is a human edit, you can:"
        echo "  1. Add [HUMAN EDIT] to your commit message"
        echo "  2. Set HUMAN_EDIT=1 environment variable when committing"
        echo "  3. Temporarily remove the file from .noagent if appropriate"
        exit 1
      fi
    done
  done
fi

# Check for NOAGENT headers in any modified files, regardless of commit message
for file in $STAGED_FILES; do
  # Skip binary files and non-existent files
  if [ ! -f "$file" ] || file "$file" | grep -q "binary"; then
    continue
  fi
  
  # Check for NOAGENT header in file content
  if grep -q "NOAGENT:" "$file"; then
    if [ "$LOOKS_AUTOMATED" -eq 1 ]; then
      echo "Error: File '$file' has NOAGENT header but commit message suggests automated changes"
      echo "If this is a human edit, add [HUMAN EDIT] to your commit message"
      exit 1
    fi
  fi
done

exit 0
